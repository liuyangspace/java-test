
tomcat

home: http://tomcat.apache.org

info: JavaEE 服务器容器，实现了 Servlet、JSP 规矩

1, install
    1.1, 获取软件数据
        get: http://tomcat.apache.org
    1.2, 配置环境变量
        JAVA_HOME       // java运行环境
        CATALINA_HOME   // tomcat家目录
        CATALINA_BASE   // tomcat运行（工作）目录

2, 软件文件结构
    $CATALINA_HOME
        /bin    - 可执行程序目录，服务软件 启动，关闭 脚本（The *.sh files for Unix）（the *.bat files for Windows）
            /bootstrap.jar  - 启动脚本最终执行的java程序(org.apache.catalina.startup.Bootstrap)
            ...
        /conf   - 服务软件配置目录，Configuration files and related DTDs.
            /tomcat-users.xml   - 管理用户权限,（管理各个虚拟主机，项目）
            /server.xml         - 服务器配置。虚拟主机、虚拟目录 配置。
            /web.xml            - 应用程序配置。应用程序 启动参数，路径映射 配置。
            /context.xml        -
            ...
        /logs   - Log files are here by default.
        /lib    -
            /servlet-api.jar    - Servlet 规矩 封装类包
            /jsp-api.jar        - JSP 规矩 封装类包
            ...
        /webapps - 项目发布目录
            /ROOT
            ...
        /work    - 项目运行目录 （JSP文件 解释，编译 等）

3, 常用配置
    %tomcat%/conf/tomcat-users.xml
        <role rolename="manager-gui"/>  <!--声明当前需要的角色-->
        <user username="root" password="root" roles="manager-gui"/><!-- 确定当前用户的账号和密码，以及使用的角色-->

    %tomcat%/conf/server.xml
        <Server port="8005" shutdown="SHUTDOWN">
        <Connector port="8080" protocol="HTTP/1.1">                                     <!--端口-->
        <Connector port="8009" protocol="AJP/1.3">
            <Host name="localhost"  appBase="webapps">                                  <!--虚拟主机-->
                <Context path="/xxx" docBase="F:\workspaces\20120909\day04\WebRoot" />  <!--虚拟目录-->
            	    <!-- path：浏览器访问的路径 -->
            	    <!-- docBase：当前路径映射的实际文件夹位置 -->

    %tomcat%/conf/web.xml   // 或者:%projectHome%/WEB-INF/web.xml
        <context-param>         <!--自定义上下文参数-->
            <param-name>dbname</param-name>
            <param-value>myDB</param-value>
        <welcome-file-list>
            <welcome-file>index.html</welcome-file>
        // servlet
        <servlet>               <!--标签：进行servlet注册-->
        	<servlet-name>      <!--标签：为servlet起一个别名，提供给其他程序使用-->
        	<load-on-startup>   <!-- 标签：启动时的优先级 -->
            <servlet-class>     <!--标签：确定servlet类所在位置-->
        	<jsp-file>          <!--标签：指定JSP-->
        <servlet-mapping>       <!--标签：映射已有的servlet-->
            <servlet-name>      <!--标签：确定使用的已有的servlet的名称-->
            <url-pattern>       <!--标签：确定浏览器访问的路径-->
        // filter
        <filter>
            <filter-name>Filter</filter-name>
            <filter-class>servlet.filter.Filter</filter-class>
        <filter-mapping>
            <filter-name>Filter</filter-name>
            <url-pattern>/filter/*</url-pattern>
            <servlet-name>FilterServlet</servlet-name>
            <dispatcher>ERROR</dispatcher>
        // listener
        <listener>
            <listener-class>servlet.listener.RequestListener</listener-class>

4, web项目目录结构( %tomcat%/webapps/ )
    %tomcat%/webapps/webProjectName
        /WEB-INF    - 屏蔽浏览器访问的资源目录。此目录浏览器不可见
            /classes    - 存放当前web的源码文件生成的class文件
    	    /lib        - 所依赖jar文件存放的位置
            /web.xml    - web项目的配置文件

